I"	<h1 id="lazy-binding">Lazy Binding</h1>
<p>Relocation when unresolved symbol is first referenced<br />
Can be overridden<br />
Procedure Linkage Table (.plt) and Global Offset Table (.got/.got.plt).<br />
Faster. Load when needed.</p>

<p>One entry in .plt per library function.<br />
Each library has their own .pltand .got (.got.plt).<br />
Dynamic Binding. 
Initially the entry in .got.pltrefers back to the .pltfor resolution.<br />
After resolution, the entry in .got.pltis patched with the address of the function.</p>

<h2 id="relocation-sections">Relocation Sections</h2>

<p>.dynamic: Useful during loading and setting up for execution.<br />
.init_array: array of pointers to functions to be used as constructors.<br />
.fini_array: array of pointers to functions to be used as destructors.<br />
.shstrtab, .symtab, .strtab, .dynsym, .dynstr</p>

<h2 id="program-headers">Program Headers</h2>
<p>Choose what to load.</p>

<h2 id="list-of-commands-used">List of Commands Used</h2>

<p><code class="language-plaintext highlighter-rouge">readelf -h &lt;file&gt;</code><br />
	- Show the executable header of the file.<br />
<code class="language-plaintext highlighter-rouge">readelf --wide --sections &lt;file&gt;</code><br />
	- Show the section headers in the file.<br />
<code class="language-plaintext highlighter-rouge">readelf --wide --segments &lt;file&gt;</code><br />
	- Show the program headers in the file.<br />
<code class="language-plaintext highlighter-rouge">readelf --relocs &lt;file&gt;</code>  <br />
	- Show the relocation symbols in the file.<br />
<code class="language-plaintext highlighter-rouge">readelf --symbols &lt;file&gt;</code><br />
	- See the entries in the symbol table section.<br />
<code class="language-plaintext highlighter-rouge">readelf --dyn-syms &lt;file&gt;</code><br />
    - See the entries in the dynamic symbol table section.<br />
<code class="language-plaintext highlighter-rouge">readelf -p &lt;section, e.g., .shstrtab, .dynstr&gt; &lt;file&gt;</code><br />
	- Dump the content of a section in string format.<br />
<code class="language-plaintext highlighter-rouge">objdump -M intel -dj. &lt;section&gt; &lt;file&gt;</code><br />
	- Disassemble the content of a section. Usually we apply this to the .text section, and sometimes the .pltsection.</p>
:ET