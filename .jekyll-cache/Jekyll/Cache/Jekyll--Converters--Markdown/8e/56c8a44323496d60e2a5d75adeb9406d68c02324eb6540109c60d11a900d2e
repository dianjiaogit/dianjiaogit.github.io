I"Z<h1 id="information-theory--kolmogorov-complexity">Information Theory &amp; Kolmogorov Complexity</h1>

<h2 id="philosophical-issues">Philosophical Issues</h2>
<p>We need a general &amp; formal &amp; complete &amp; consistent theory for induction &amp; prediction.</p>

<p>A unique principle for prediction.<br />
We have Occamâ€™s razor.<br />
Problem: Not a formal/mathematical objective principle.</p>

<h2 id="definitions--notation">Definitions &amp; Notation</h2>
<p>$i, k, n, t \in \mathbb{N} = \{ 1, 2, 3,â€¦ \} \\ \mathbb{B} = \{0, 1\} \\ x, y, z \in \mathbb{B}^* \\ \omega \in \mathbb{B}^\infty$<br />
$\epsilon$ is empty string<br />
$1^n$ the string of $n$ ones<br />
$\ell (x)$ the length of string $x$<br />
$xy = x \circ y$ the concatenation of string $x$ with $y$</p>

<p>Every countable set is $\cong \mathbb{N}$.<br />
Interpret string with binary.<br />
Problem: Not unique.
Use bijection between $\mathbb{N}$ and $\mathbb{B}^*$.<br />
First-order prefix coding $\bar{x} := 1^{\ell (x)}0x.$<br />
Second-order prefix coding $x` := \overline{\ell (x)} x$.</p>

<p>$\ell (x) \leq \log (x + 1)$<br />
$\ell (\bar{x}) \leq 2\log x$<br />
$\ell (x`) \leq \log x + 2\log \log x$</p>

<p>String $x$ is prefix of $y :\Leftrightarrow \exists z (\neq \epsilon)$ such that $xz = y$.<br />
Set $\mathcal{P}$ is prefix-free = no element is prefix of another.</p>

<p><strong>Theorem 2.1 (Kraft Inequality)</strong><br />
For a prefix code $\mathcal{P}$ we have $\sum_{x \in \mathcal{P}}2^{-\ell (x)} \leq 1$.</p>

<p>Set of $\bar{x}$ is a prefix code.<br />
Set of $x`$ is a prefix code.<br />
Pair string $\langle x, y \rangle = x`y$.<br />
$f(x, y) = f(x`y)$</p>

<h2 id="turing-machines">Turing Machines</h2>
<p><strong>Thesis 2.2 (Turing)</strong><br />
Everything that can be reasonably said to be computable by a human using a fixed procedure can also be computed by a Turing machine.</p>

<p><strong>Thesis 2.3 (Church)</strong><br />
The class of algorithmically computable numerical functions (in the intuitive sense) coincides with the class of partial recursive functions.</p>

<p><strong>Assumption 2.4 (Short compiler)</strong><br />
Given two natural Turing-equivalent formal systems F1 and F2, then there always exists a single short program on F2 which is capable of interpreting all F1-programs.</p>

<p><strong>Definition 2.5 (Prefix TM (pTM))</strong><br />
	1. one unidirectional read-only input tape<br />
	2. one unidirectional write-only input tape<br />
	3. some bidirectional work tapes, initially filled with zeros<br />
	4. all tapes are binary<br />
	5. T halts on input p with output x<br />
	6. {$p : \exists x: T(p) = x$} forms a prefix code<br />
	7. $p$ is self-delimiting program</p>

<p><strong>Definition 2.6 (Monotone Turing Machine)</strong><br />
	1~4<br />
	5. T outputs/computes a string starting with x on input p<br />
	6. T may continue operation and need not to halt<br />
	7. {$p : T(p) = x^*$} forms a prefix code<br />
	8. $p$ is minimal program</p>

<p><strong>Theorem 2.7 (Universal prefix/monotone Turing machine $U$)</strong><br />
which simulates (any) pTM/mTM $T_i$ with input $y`q$ if fed with input $y`i`q$, i.e.<br />
\(U(y`i`q) = T_i(y`q) \quad \forall y,i,q\)<br />
For $p \neq y`i`q, U(p)$ outputs nothing. $y$ is side information.</p>

<p><strong>Theorem 2.8 (Halting Problem)</strong><br />
There is no TM $T: T(i`p) = 1 \Leftrightarrow T_i(p))$ does not halt.</p>

<h2 id="kolmogorov-complexity">Kolmogorov Complexity</h2>
<p><strong>Theorem 2.9 (Universality/Minimality of $K_U$)</strong><br />
$K_U(x) \leq K_T(x) + c_{TU}$,<br />
where $c_{TU} &lt;^+ K_U(T) &lt; \infty$ is independent of $x$</p>

<p><strong>Definition 2.10 ((conditional) prefix Kolmogorov complexity)</strong><br />
= shortest program $p$, for which reference $U$ outputs $x$ (given $y$):<br />
$K(x) := \min_{p} \{\ell (p) : U(p) = x\},$<br />
$K(x|y) := \min_{p} \{\ell (p) : U(y`p) = x\}$</p>

<p><strong>Theorem 2.11 (Upper Bound on $K$)</strong><br />
$K(x) &lt;^+ \ell (x) + 2 \log \ell (x), \quad K(n) &lt;^+ \log n + 2\log \log n$</p>

<p><strong>Theorem 2.12 (Lower bound for most $n$, Kraft inequality)</strong><br />
$\sum_{x \in \mathbb{B}^*} 2^{-K(x)} \leq 1, \quad K(x) \geq l(x)$ for â€˜mostâ€™ $x$<br />
$K(x) \to \infty$ for $n \to \infty$</p>

<p><strong>Theorem 2.13 (Extra Information)</strong><br />
$K(x | y) &lt;^+ K(x) &lt;^+ K(x, y)$</p>

<p><strong>Theorem 2.14 (Subadditivity)</strong><br />
$K(xy) &lt;^+ K(x, y) &lt;^+ K(x) + K(y | x) &lt;^+ K(x) + K(y)$</p>

<p><strong>Theorem 2.15 (Symmetry of Information)</strong><br />
$K(x | y, K(y)) + K(y) =^+ K(x, y) =^+ K(y, x) =^+ K(y |x, K(x)) + K(x)$</p>

<p><strong>Theorem 2.16 (Information Non-Increase)</strong><br />
$K(f(x)) &lt;^+ K(x) + K(f)$ for recursive $f: \mathbb{B}^* \to \mathbb{B}^*$</p>

<p><strong>Theorem 2.17 (Probability coding / MDL)</strong><br />
$K(x) &lt;^+ -\log P(x) + K(P)$<br />
if $P : \mathbb{B}^* \to [0, 1]$ is enumerable and $\sum_{x \in \mathbb{B}^*} P(x) \leq 1$</p>

<p><strong>Definition 2.18 (Definition of Shannon entropy)</strong><br />
$Entropy(X) \equiv H(X) := -\sum_{x \in X} P(x) \log P(x)$<br />
$Entropy(X|Y) \equiv H(X|Y) := -\sum_{y \in Y} P(y) \sum_{x \in X} P(x|y) \log P(x|y)$</p>

<p><strong>Theorem 2.19 (Properties of Shannon entropy)</strong><br />
Upper bound: $H(X) \leq \log |X| = n$ for $X = \mathbb{B}^n$<br />
Extra information: $H(X|Y) \leq H(X) \leq H(X,Y)$<br />
Subadditivity: $H(X,Y) \leq H(X) + H(Y)$<br />
Symmertry: $H(X|Y) + H(Y) = H(X,Y) = H(Y,X)$<br />
Information non-increase: $H(f(X)) \leq H(X)$ for any $f$</p>

<p><strong>Theorem 2.20 (Monotone Kolmogorov Complexity Km)</strong><br />
$Km(x) := \min_{p} {\ell (p) : U(p) = x* }$<br />
$Km(x) &lt;^+ \ell (x)$<br />
$Km(xy) \geq Km(x) \in \mathbb{N}_0$<br />
$Km(x) &lt;^+ -\log \mu (x) + K(\mu)$ if $\mu$ comp. measure</p>
<h2 id="computability-concepts">Computability Concepts</h2>
<p><strong>Definition 2.21 (Computable functions)</strong><br />
We consider functions $f : \mathbb{N} \to \mathbb{R} :$<br />
$f$ is <em>finitely computable</em> or <em>recursive</em> $iff$ there are Turing machines $T_{1/2}$ with output interpreted as natural numbers and $f(x) = \frac{T_1 (x)}{T_2 (x)}$,<br />
$f$ is <em>estimable</em> $iff \exists$ recursive $\phi (\cdot , \cdot) \forall \varepsilon &gt; 0 : |\phi (x, \lfloor \frac{1}{\varepsilon} \rfloor) - f(x)| &lt; \varepsilon \forall x$.<br />
$f$ is <em>lower semicomputable</em> or <em>enumerable</em> $iff \phi (\cdot , \cdot)$ is recursive and $\lim_{t \to \infty} \phi (x, t) = f(x)$ and $\phi (x, t) \leq \phi (x, t + 1)$.<br />
$f$ is <em>approximable</em> $iff \phi (\cdot , \cdot)$ is recursive and $\lim_{t \to \infty} \phi (x, t) = f(x)$</p>

<p><strong>Theorem 2.22 ((Non)computability of K and Km Complexity)</strong><br />
Thre prefix complexity $K : \mathbb{B}^* \to \mathbb{N}$ and the monotone complexity $Km : \mathbb{B}^* \to \mathbb{N}$ are co-enumerable, but not finitely computable.</p>
:ET